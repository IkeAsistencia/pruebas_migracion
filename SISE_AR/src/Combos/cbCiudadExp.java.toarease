/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Combos;

/*
 *
 * @author fcerqueda
 */
import java.util.LinkedHashMap;
import java.util.List;
import java.util.HashMap;
import java.util.ArrayList;
import java.sql.ResultSet;
import Utilerias.UtileriasBDF;
import java.util.Iterator;
import java.util.Set;

public class cbCiudadExp {

    private static LinkedHashMap comboHash = null;
    private static boolean isConfigured = false;

    public cbCiudadExp() {
    }

    private synchronized static boolean loadComboList() {
        if (isConfigured == false) {
            comboHash = new LinkedHashMap();
            try {
                //ResultSet rs = UtileriasBDF.rsSQLNP("select CodEnt, dsEntFed from cEntFed order by dsEntfed");
                ResultSet rs = UtileriasBDF.rsSQLNP("select clCiudad, dsCiudad, clTipoBen from CScCiudadExpPriceless order by clTipoBen, dsCiudad");

                while (rs.next()) {
                    CiudadExp CiudadExpI = new CiudadExp();

                    if (rs.getString("clCiudad") == null || rs.getString("clCiudad").length() == 0) {
                        CiudadExpI.setStrclCiudad("");
                    } else {
                        CiudadExpI.setStrclCiudad(rs.getString("clCiudad"));
                    }

                    if (rs.getString("dsCiudad") == null || rs.getString("dsCiudad").length() == 0) {
                        CiudadExpI.setStrDsCiudad("");
                    } else {
                        CiudadExpI.setStrDsCiudad(rs.getString("dsCiudad"));
                    }

                    if (rs.getString("clTipoBen") == null || rs.getString("clTipoBen").length() == 0) {
                        CiudadExpI.setClTipoBen(0);
                    } else {
                        CiudadExpI.setClTipoBen(rs.getInt("clTipoBen"));
                    }

                    ResultSet rsMD = UtileriasBDF.rsSQLNP("select clExperiencia,dsExperiencia from CSCexperiencias where clCiudad = '" + CiudadExpI.getStrclCiudad() + "' and activo = 1 order by dsExperiencia");

                    List lstExpPrin = new ArrayList();
                    while (rsMD.next()) {
                        ExpPriceless cbEP = new ExpPriceless();

                        if (rsMD.getString("clExperiencia") == null || rsMD.getString("clExperiencia").length() == 0) {
                            cbEP.setStrclExperiencia("");
                        } else {
                            cbEP.setStrclExperiencia(rsMD.getString("clExperiencia"));
                        }

                        if (rsMD.getString("dsExperiencia") == null || rsMD.getString("dsExperiencia").length() == 0) {
                            cbEP.setDsExperiencia("");
                        } else {
                            cbEP.setDsExperiencia(rsMD.getString("dsExperiencia"));
                        }

                        lstExpPrin.add(cbEP);

                    }
                    rsMD.close();
                    rsMD = null;

                    CiudadExpI.setLstCExperiencias(lstExpPrin);
                    comboHash.put(CiudadExpI.getStrclCiudad(), CiudadExpI);
                }
                rs.close();
                rs = null;
                isConfigured = true;
            } catch (Exception e) {
                System.out.print(e.getMessage());
                isConfigured = false;
                return false;
            } finally {
                //System.out.println("Entre a Load");
            }
        }
        return true;
    }

    public static HashMap getComboHash() {
        loadComboList();
        return comboHash;
    }

    public static String GeneraHTML(int pSize, String pValue, int pTipoBen) {

        HashMap hshMap = cbCiudadExp.getComboHash();
        StringBuilder strHTML = new StringBuilder();

        if (hshMap != null) {
            int iLen = 0;
            Set set = hshMap.keySet();
            Iterator iT = set.iterator();
            CiudadExp cbCiudadExpNode = null;

            while (iT.hasNext()) {
                cbCiudadExpNode = (CiudadExp) hshMap.get(iT.next());

                if (cbCiudadExpNode.getClTipoBen() == (pTipoBen)) {

                    strHTML.append("<option label='").append(cbCiudadExpNode.getStrDsCiudad()).append("' value='").append(cbCiudadExpNode.getStrclCiudad()).append("'");
                    iLen = cbCiudadExpNode.getStrDsCiudad().length();
                    if (iLen > pSize) {
                        iLen = pSize;
                    }
                    if (pValue != null) {
                        if (pValue.equalsIgnoreCase(cbCiudadExpNode.getStrDsCiudad()) == true) {
                            strHTML.append(" selected ");
                        }
                    }
                    strHTML.append(" >").append(cbCiudadExpNode.getStrDsCiudad().substring(0, iLen)).append("</option>");

                }// falta codificar combo vacio
            }

            /*if (strHTML.length() == 0) {
            //*Se llena el combo el datos predeterminado CodEnt = 25 para paises que no tienen entidades cargadas //
            System.out.println("pValue:" + pValue + " pTipoBen:" + pTipoBen);
            strHTML.append("<option value='25'");
            if (pValue.equalsIgnoreCase("EXTERIOR")) {
            strHTML.append(" selected ");
            }
            strHTML.append(" >EXTERIOR </option>");
            }*/
        }
        return strHTML.toString();
    }

    public static String GeneraHTMLMD(int pSize, String pCiudad, String pdsExpPriceless) {

        CiudadExp hshObj = (CiudadExp) (cbCiudadExp.getComboHash().get(pCiudad));
        StringBuilder strHTML = new StringBuilder();
        if (hshObj != null) {
            List tempList = hshObj.getLstCExperiencias();
            if (tempList != null) {

                int x = 0;
                int xR = 1;
                int iLen = 0;
                if (tempList != null) {
                    for (x = 0; x < tempList.size(); x++, xR++) {
                        ExpPriceless cbExpPricelessNode = (ExpPriceless) tempList.get(x);
                        strHTML.append("<option label='").append(cbExpPricelessNode.getDsExperiencia()).append("' value='").append(cbExpPricelessNode.getStrclExperiencia()).append("'");
                        iLen = cbExpPricelessNode.getDsExperiencia().length();
                        if (iLen > pSize) {
                            iLen = pSize;
                        }
                        if (pdsExpPriceless != null) {
                            if (pdsExpPriceless.equalsIgnoreCase(cbExpPricelessNode.getDsExperiencia()) == true) {
                                strHTML.append(" selected ");
                            }
                        }
                        strHTML.append(" >").append(cbExpPricelessNode.getDsExperiencia().substring(0, iLen)).append("</option>");
                    }
                }
            }
        }
        return strHTML.toString();
    }

    public static void main(String args[]) {
    }

    public static void reLoad() {
        isConfigured = false;
    }
}
